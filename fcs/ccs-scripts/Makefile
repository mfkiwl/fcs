all: fcs.debug.dat fcs.release.dat

bconvert64x:
	$(CC) -o bconvert64x bconvert64x.c

b2i2c:
	$(CC) -o b2i2c b2i2c.c

byteswapccs:
	$(CC) -o byteswapccs byteswapccs.c

romparse_bin:
	$(MAKE) -C romparse

# Convert the boot table image generated by hex6x to I2C format (which is also
# used for SPI).
fcs.debug.i2c: b2i2c
	./b2i2c ../Debug/fcs.btbl fcs.debug.i2c

fcs.release.i2c: b2i2c
	./b2i2c ../Release/fcs.btbl fcs.release.i2c

# Convert the I2C image to CCS format for romparse
fcs.debug.ccs: b2ccs fcs.debug.i2c
	./b2ccs fcs.debug.i2c fcs.debug.ccs

fcs.release.ccs: b2ccs fcs.release.i2c
	./b2ccs fcs.release.i2c fcs.release.ccs

# Romparse adds some extra boot configuration data and writes the resulting
# file out to i2crom.ccs in the current directory
fcs.debug.rom: romparse_bin fcs.debug.i2c
	romparse/romparse spi-Debug.map
	mv i2crom.ccs fcs.debug.rom

fcs.release.rom: romparse_bin fcs.release.i2c
	romparse/romparse spi-Release.map
	mv i2crom.ccs fcs.release.rom

fcs.debug.dat: byteswapccs fcs.debug.rom
	byteswapccs fcs.debug.rom fcs.debug.dat

fcs.release.dat: byteswapccs fcs.release.rom
	byteswapccs fcs.release.rom fcs.release.dat

clean:
	rm -f *.o romparse/*.o bconvert64x b2i2c byteswapccs romparse/romparse *.btbl *.i2c *.ccs *.rom *.dat
